name: Test

on:
  push:
  pull_request:

jobs:
  test:
    name: 'PHP ${{ matrix.php }} + Symfony ${{ matrix.symfony }}'
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        dependencies: [highest]
        experimental: [false]
        php:
          - '7.1'
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'
        symfony:
          - '2.8.*'
          - '3.0.*'
          - '3.1.*'
          - '3.2.*'
          - '3.3.*'
          - '3.4.*'
          - '4.0.*'
          - '4.1.*'
          - '4.2.*'
          - '4.3.*'
          - '4.4.*'
          - '5.0.*'
          - '5.1.*'
          - '5.2.*'
        exclude:
          - php: '7.1'
            symfony: '5.0.*'
          - php: '7.1'
            symfony: '5.1.*'
          - php: '7.1'
            symfony: '5.2.*'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure coverage driver
        id: coverage
        run: echo ::set-output name=driver::$([ "${{ matrix.php }}" = "7.1" ] && echo "xdebug" || echo "pcov")

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: ${{ steps.coverage.outputs.driver }}
          tools: composer:v2

      - name: Install Symfony
        run: composer require symfony/symfony:"${{ matrix.symfony }}" --no-update

      - name: 'Install Composer dependencies (${{ matrix.dependencies }})'
        uses: 'ramsey/composer-install@v1'
        with:
          dependency-versions: '${{ matrix.dependencies }}'

      - name: Run Tests
        run: vendor/bin/phpunit --coverage-clover build/coverage-clover.xml

      - name: Send coverage results to Scrutinizer CI
        if: matrix.php != '8.0'
        run: |
          wget https://scrutinizer-ci.com/ocular.phar
          php ocular.phar code-coverage:upload --format=php-clover build/coverage-clover.xml

      - name: Send coverage results to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: 'PHP ${{ matrix.php }} + ${{ matrix.symfony }}'
        if: matrix.php != '8.0'
        run: |
          composer global require php-coveralls/php-coveralls
          php-coveralls -x build/coverage-clover.xml -o build/coveralls-upload.json -v

      - name: Install PHPStan
        run: |
          composer global require phpstan/phpstan:"0.12.*"
          composer global require phpstan/phpstan-phpunit:"0.12.*"

      - name: Run PHPStan
        run: phpstan --memory-limit=1G analyse
