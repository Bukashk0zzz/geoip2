name: Test

on:
  push:
  pull_request:

jobs:
  test:
    name: 'PHP ${{ matrix.php-version }} + ${{ matrix.dependencies }} + ${{ matrix.variant }}'
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        dependencies: [highest]
        php-version:
          - '7.1'
          - '7.2'
          - '7.3'
          - '7.4'
        experimental: [false]
        variant: [normal]
        include:
          - php-version: '7.1'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"2.8.*"'
          - php-version: '7.1'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"3.0.*"'
          - php-version: '7.1'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"3.1.*"'
          - php-version: '7.1'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"3.2.*"'
          - php-version: '7.1'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"3.3.*"'
          - php-version: '7.1'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"3.4.*"'
          - php-version: '7.1'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"4.0.*"'
          - php-version: '7.1'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"4.1.*"'
          - php-version: '7.1'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"4.2.*"'
          - php-version: '7.1'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"4.3.*"'
          - php-version: '7.1'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"4.4.*"'
          - php-version: '7.2'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"5.0.*"'
          - php-version: '7.2'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"5.1.*"'
          - php-version: '7.2'
            dependencies: highest
            experimental: false
            variant: 'symfony/symfony:"5.2.*"'
          - php-version: '8.0'
            dependencies: lowest
            variant: normal
            experimental: true
          - php-version: '8.0'
            dependencies: highest
            variant: normal
            experimental: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2

      - name: Install variant
        if: matrix.variant != 'normal'
        run: composer require ${{ matrix.variant }} --no-update

      - name: 'Install Composer dependencies (${{ matrix.dependencies }})'
        uses: 'ramsey/composer-install@v1'
        with:
          dependency-versions: '${{ matrix.dependencies }}'
          composer-options: '--prefer-dist --prefer-stable'

      - name: Run Tests
        run: vendor/bin/phpunit --coverage-clover build/coverage-clover.xml

      - name: Send coverage results to Scrutinizer CI
        run: |
          composer global require scrutinizer/ocular
          ocular code-coverage:upload --format=php-clover build/coverage-clover.xml

      - name: Send coverage results to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: 'PHP ${{ matrix.php-version }} + ${{ matrix.dependencies }} + ${{ matrix.variant }}'
        run: |
          composer global require php-coveralls/php-coveralls
          php-coveralls -x build/coverage-clover.xml -o build/coveralls-upload.json -v
